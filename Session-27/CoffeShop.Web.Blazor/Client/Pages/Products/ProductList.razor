@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@page "/productlist"
@using CoffeShop.Web.Blazor.Shared
@using CoffeShop.Web.Blazor.Shared.Product;
<h3>Products</h3>

@if (isLoading) {
            <p>Loading ...</p>
} else {
            <button class="btn btn-primary" @onclick="CreateItem">Create</button>

            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Code</th>
                        <th>Description</th>
                        <th>Cost</th>
                        <th>Price</th>
                        <th>Product Category</th>
                        <th>Actions</th>

                    </tr>
                </thead>
                <tbody>
                @foreach (var product in productList) {
                    <tr>
                        <td>@product.Code</td>
                        <td>@product.Description</td>
                        <td>@product.Cost</td>
                        <td>@product.Price</td>
                        <td>HERE LIES PRODUCT CATEGORY</td>
                        <td>
                            <button class="btn btn-primary" @onclick="()=> EditItem(product)">Edit</button>
                            <button class="btn btn-danger" @onclick="()=> DeleteItem(product)">Delete</button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
}

@code {
    private List<ProductListDto> productList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer() {
        productList = await httpClient.GetFromJsonAsync<List<ProductListDto>>("product");
    }

    private void CreateItem() {
        navigationManager.NavigateTo("productList/edit");
    }

    private void EditItem(ProductListDto product) {
        navigationManager.NavigateTo($"productlist/edit/{product.Id}");
    }

    private async Task DeleteItem(ProductListDto product) {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm) {
            var response = await httpClient.DeleteAsync($"product/{product.Id}");
            response.EnsureSuccessStatusCode();
            await LoadItemsFromServer();
        }
    }
}