@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@page "/productcategorylist"
@using CoffeShop.Web.Blazor.Shared
<h3>Product Categories</h3>

@if (isLoading) {
        <p>Loading ...</p>
} else {
        <button class="btn btn-primary" @onclick="CreateItem">Create</button>

        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Code</th>
                    <th>Description</th>
                    <th>Product Type</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var productCategory in productCategoryList) {
                <tr>
                    <td>@productCategory.Code</td>
                    <td>@productCategory.Description</td>
                    <td>@productCategory.ProductType</td>
                    <td>
                        <button class="btn btn-primary" @onclick="()=> EditItem(productCategory)">Edit</button>
                        <button class="btn btn-secondary" @onclick="()=> DetailsItem(productCategory)">Details</button>
                        <button class="btn btn-danger" @onclick="()=> DeleteItem(productCategory)">Delete</button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
}

@code {
    private List<ProductCategoryListDto> productCategoryList = new();
    bool isLoading { get; set; } = true;

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer() {
        var tempProductCategoryList = await httpClient.GetFromJsonAsync<List<ProductCategoryListDto>>("productCategory");
        if(tempProductCategoryList is not null) {
            productCategoryList = tempProductCategoryList;
        } else {
            // Todo: if tempProductCategoryList is not null
        }
    }

    private void CreateItem() {
        navigationManager.NavigateTo("productCategoryList/edit");
    }

    private void EditItem(ProductCategoryListDto productCategory) {
        navigationManager.NavigateTo($"productCategorylist/edit/{productCategory.Id}");
    }

    private void DetailsItem(ProductCategoryListDto productCategory) {
        navigationManager.NavigateTo($"productCategorylist/details/{productCategory.Id}");
    }

    private async Task DeleteItem(ProductCategoryListDto productCategory) {
        var confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Delete Item. Are you sure?");
        if (confirm) {
            var response = await httpClient.DeleteAsync($"productCategory/{productCategory.Id}");
            response.EnsureSuccessStatusCode();
            await LoadItemsFromServer();
        }
    }
}