@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@using FuelStation.Web.Balazor.Shared;

@page "/customerList"

<h3>Customers</h3>

@if (isLoading) {
    <div class="spinner-border text-secondary" role="status"></div>
}else {
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>CardNumber</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers) {
                <tr>
                    <td>@customer.Name</td>
                    <td>@customer.Surname</td>
                    <td>@customer.CardNumber</td>
                    <td>
                        @*<BootstrapButton ButtonType="BootstrapButtonType.Warning" OnClick="()=> EditItem(customer)">Edit</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Primary" OnClick="()=> DetailItem(customer)">Details</BootstrapButton>
                        <BootstrapButton ButtonType="BootstrapButtonType.Danger" OnClick="()=> DeleteItem(customer)">Delete</BootstrapButton>*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool isLoading = true;
    List<CustomerListDto> customers = null!;

    protected override async Task OnInitializedAsync() {
        await LoadItemsFromServer();
        isLoading = false;
    }

    private async Task LoadItemsFromServer() {
        var customerList = await httpClient.GetFromJsonAsync<List<CustomerListDto>>("api/customer");
        if(customerList is not null) {
            customers = customerList;
        } else {
            await jsRuntime.InvokeVoidAsync("alert", "could not find the customer list");
            navigationManager.NavigateTo("");
        }
    }
}
