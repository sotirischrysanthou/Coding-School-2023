@page "/customerlist/details/{Id:guid?}"
@using System.Net.Http.Headers;
@using uelStation.Web.Blazor.Client.Extensions;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authStateProvider
@inject IJSRuntime jsRuntime
@attribute [Authorize(Roles = "Manager")]
<h3>Customer Details</h3>

@if (isLoading) {
    <div class="spinner-border text-secondary" role="status">
    </div>
} else {
    <div class="row">
        <div class="col-md-4">
            <label class="form-label">Name</label>
            <input class="form-control" @bind="@Customer.Name" disabled />
        </div>
        <div class="col-md-4">
            <label class="form-label">Surname</label>
            <input class="form-control" @bind="@Customer.Surname" disabled />
        </div>
        <div class="col-md-4">
            <label class="form-label">CardNumber</label>
            <input class="form-control" @bind="@Customer.CardNumber" disabled />
        </div>
        @if (Customer.Transactions.Count() > 0) {
            <div class="row mt-5">
                <h4 class="col-xs-6">
                    Customer's Transactions:
                </h4>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Payment Method</th>
                            <th>Total Value</th>
                            <th>Employee</th>
                            <th>Customer</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Customer.Transactions) {
                            <tr>
                                <td>@transaction.Date</td>
                                <td>@transaction.PaymentMethod</td>
                                <td>@transaction.TotalValue</td>
                                <td>@transaction.Employee.Name @transaction.Employee.Surname</td>
                                <td>@transaction.Customer.Name @transaction.Customer.Surname</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
    <div class="row mt-2">
        <div class="col">
            <div class="col">
                <BootstrapButton ButtonType="BootstrapButtonType.Secondary" OnClick="OnCancel">Back</BootstrapButton>
            </div>
        </div>

    </div>
}


@code {
    private bool isLoading = true;
    [Parameter] public Guid? Id { get; set; }
    CustomerDetailsDto? Customer { get; set; }

    protected override async Task OnInitializedAsync() {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        var token = await customAuthStateProvider.GetToken();
        if (!String.IsNullOrWhiteSpace(token)) {
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("bearer", token);
            if (Id == null) {
                Customer = new();
                Customer.CardNumber = "A0";
            }
            else {
                Customer = await httpClient.GetFromJsonAsync<CustomerDetailsDto>($"api/customer/edit/{Id}");
                if (Customer is null) {
                    await jsRuntime.InvokeVoidAsync("alert", "Can not find Customer");
                    navigationManager.NavigateTo("/");
                    //TODO: Handle if customer is null
                }
            }
            isLoading = false;
        }
        else {
            navigationManager.NavigateTo("/login", true);
        }
    }

    private void OnCancel() {
        navigationManager.NavigateTo("customerList");
    }

    private async Task OnSave() {
        HttpResponseMessage? response = null;
        if (Id == null) {
            response = await httpClient.PostAsJsonAsync("api/customer", Customer);
        } else {
            response = await httpClient.PutAsJsonAsync("api/customer", Customer);
        }

        response.EnsureSuccessStatusCode();
        navigationManager.NavigateTo("/customerlist");
    }
}
